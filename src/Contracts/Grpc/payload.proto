// Copyright 2021 MONAI Consortium
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
option csharp_namespace = "Monai.Deploy.WorkloadManager.Contracts.Grpc";
package monai.deploy.workload_manager.contracts.grpc.payload.v1;

import public "Grpc/common.proto";
import "google/protobuf/timestamp.proto";

// Payloads Service
service Payload {
  // Upload file(s) to the Workload Manager
  rpc Upload (stream PayloadUploadRequest) returns (PayloadUploadResponse);

  // Download file(s) from the Workload Manager
  rpc Download (PayloadDownloadRequest) returns (stream PayloadDownloadResponse);
}

// Parameter to Payload::Upload
message PayloadUploadRequest {
  // Date time the file was originally received by the sender
  google.protobuf.Timestamp date_time_received = 1;

  // The correlation ID shall be a UUID/GUID formatted string, used for tracking, auditing, debugging purposes.
  string correlation_id = 2;

  // Name of the file with a length limit of 255 bytes.
  // Workload Manager may append suffix to te file to avoid collisions when uploading to the designated orchestration engine.
  string name = 3;

  // (Optional) Application names or application identifiers to associate the file with.
  // If value is present, the file bypasses the phase 1 of data discovery process.
  repeated string applications = 4;

  // MIME type of the file.  E.g. application/dicom, application/json.
  string mime_type = 5;

  // (Optional) Additional metadata in JSON format.
  // DICOM - MUST be DICOM JSON Model specified in PS3.18 Appendix F.
  //   Workload Manager will parse this JSON string when mime_type is application/dicom and use it in the data discovery phase.
  //   If value is not present, Workload Manager loads the entire DICOM file from disk for data discovery phase.
  // Others - For all other MIME types, the meatadata is ignored.
  string metadata = 6;

  // Content of the file as raw bytes.
  bytes data = 7;
}

// Results of Payload::Upload
message PayloadUploadResponse {
  // Standard RPC response header.
  monai.deploy.workload_manager.contracts.grpc.common.v1.ResponseHeader header = 1;

  // A UUID/GUID generated by Workload Manager.
  string file_id = 2;
}

// Parameter to Payload::Download
message PayloadDownloadRequest {
  // A UUID/GUID generated by Workload Manager to locate the file.
  // Use Results.Get (REST) API to retrieve list of files first.
  string file_id =1;
}

// Results of Payload::Download
message PayloadDownloadResponse {
  // Standard RPC response header.
  monai.deploy.workload_manager.contracts.grpc.common.v1.ResponseHeader header = 1;

  // Name of the file with a length limit of 255 bytes.
  // Name is generated when application registers the file. Client SHALL handle any name collision that may occur.
  string name = 2;

  // Content of the file as raw bytes.
  bytes data = 3;
}
