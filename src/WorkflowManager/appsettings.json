{
  "WorkloadManagerDatabase": {
    "ConnectionString": "mongodb://root:rootpassword@localhost:27017",
    "DatabaseName": "WorkloadManager",
    "WorkflowCollectionName": "Workflows",
    "WorkflowInstanceCollectionName": "WorkflowInstances",
    "PayloadCollectionName": "Payloads"
  },
  "WorkflowManager": {
      "endpointSettings": {
        "defaultPageSize": 10,
        "maxPageSize": 1000000
      },
      "TaskManager": {
        "concurrency": 1,
        "taskTimeoutMinutes": 60,
        "plug-ins": {
          "argo": "Monai.Deploy.WorkflowManager.TaskManager.Argo.ArgoPlugin, Monai.Deploy.WorkflowManager.TaskManager.Argo",
          "aide_clinical_review": "Monai.Deploy.WorkflowManager.TaskManager.AideClinicalReview.AideClinicalReviewPlugin, Monai.Deploy.WorkflowManager.TaskManager.AideClinicalReview",
          "test": "Monai.Deploy.WorkflowManager.TaskManager.TestPlugin.TestPlugin, Monai.Deploy.WorkflowManager.TaskManager.TestPlugin"
        },
        "meta-data": {
          "argo": "Monai.Deploy.WorkflowManager.TaskManager.Argo.Repositories.ArgoMetadataRepository, Monai.Deploy.WorkflowManager.TaskManager.Argo",
          "test": "Monai.Deploy.WorkflowManager.TaskManager.TestPlugin.Repositories.TestPluginRepository, Monai.Deploy.WorkflowManager.TaskManager.TestPlugin"
        }
      },
      "messaging": {
        "retries": {
          "retryDelays": "localhost"
        },
        "topics": {
          "workflowRequest": "md.workflow.request",
          "exportComplete": "md.export.complete",
          "exportRequestPrefix": "md.export.request"
        },
        "dicomAgents": {
          "dicomWebAgentName": "monaidicomweb",
          "scuAgentName": "monaiscu"
        },
        "publisherServiceAssemblyName": "Monai.Deploy.Messaging.RabbitMQ.RabbitMQMessagePublisherService, Monai.Deploy.Messaging.RabbitMQ",
        "publisherSettings": {
          "endpoint": "localhost",
          "username": "admin",
          "password": "admin",
          "virtualHost": "monaideploy",
          "exchange": "monaideploy"
        },
        "subscriberServiceAssemblyName": "Monai.Deploy.Messaging.RabbitMQ.RabbitMQMessageSubscriberService, Monai.Deploy.Messaging.RabbitMQ",
        "subscriberSettings": {
          "endpoint": "localhost",
          "username": "admin",
          "password": "admin",
          "virtualHost": "monaideploy",
          "exchange": "monaideploy",
          "deadLetterExchange": "monaideploy-dead-letter",
          "exportRequestQueue": "export_tasks",
          "deliveryLimit": 3,
          "requeueDelay": 30
        }
      },
      "storage": {
        "serviceAssemblyName": "Monai.Deploy.Storage.MinIO.MinIoStorageService, Monai.Deploy.Storage.MinIO",
        "settings": {
          "endpoint": "localhost:9000",
          "accessKey": "minioadmin",
          "accessToken": "minioadmin",
          "region": "eu-west-2",
          "bucket": "test-bucket",
          "securedConnection": false,
          "executableLocation": "./",
          "serviceName": "test"
        }
      }
    },
    "Logging": {
      "LogLevel": {
        "Default": "Information",
        "System": "Warning",
        "Microsoft": "Warning",
        "Microsoft.EntityFrameworkCore": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker": "Error",
        "Monai": "Information"
      },
      "Console": {
        "FormatterName": "Systemd",
        "FormatterOptions": {
          "ColorBehavior": "Disabled",
          "IncludeScopes": true,
          "SingleLine": false,
          "TimestampFormat": " HH:mm:ss ",
          "UseUtcTimestamp": true
        }
      },
      "File": {
        "BasePath": "Logs",
        "FileEncodingName": "utf-8",
        "DateFormat": "yyyyMMdd",
        "CounterFormat": "000",
        "MaxFileSize": 10485760,
        "IncludeScopes": true,
        "MaxQueueSize": 100,
        "TextBuilderType": "Monai.Deploy.WorkflowManager.Logging.FileLoggingTextFormatter, Monai.Deploy.WorkflowManager",
        "Files": [
          {
            "Path": "MWM-<date>-<counter>.log"
          }
        ]
      }
    },
    "Kestrel": {
      "EndPoints": {
        "Http": {
          "Url": "http://localhost:5000"
        },
        "Http2": {
          "Url": "https://localhost:7000",
          "Protocols": "Http2"
        }
      }
    },
    "AllowedHosts": "*"
  }
