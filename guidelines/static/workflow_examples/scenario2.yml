workflow:
  name: my-workflow
  description: my awesome workflow
  version: 1.0
  informatics-gateway:
    ae-title: MYAET
    grouping: 0020,000E #series
    timeout: 5 #minutes
    data-sources:
      - name: MY_PACS
        ae-title: MY_PACS
        host-ip: 10.20.30.40
    export-destinations:
      - name: PROD_PACS
        ae-title: PROD_PACS
        host-ip: 10.20.100.100
        port: 104
      - name: TEST_PACS
        ae-title: TEST_PACS
        host-ip: 10.20.100.101
        port: 104
    task_templates:
       - id: clinical_review
         type: async-http
         endpoint: https://clinical-review.aide.something.nhs.uk
         payload: "{'correlation_id': '$ctx.correlation_id', 'working_dir': '$ctx.working_dir'}"
       - id: argo
         type: Argo
         endpoint: https://argoserver:2220
       - id: qa_mode_checker
         type: async-http
         endpoint: https://qa-mode.aide.something.nhs.uk/check
       - id: qa_mode_update
         type: async-http
         endpoint: https://qa-mode.aide.something.nhs.uk/update
    tasks:
      - id: input-router
        description: Route Input to top level tasks
        type: null
        evaluators:
          post:
            - condition: "metadata.input_type == dicom"
              sink: image_type_detector
      - id: image_type_detector
        description: Run Image Type Detector
        ref: argo
        argo_template: image_type_detector
        evaluators:
          post:
            - condition: "result.image_type == CT"
              sink: ct_body_part_analyser
            - condition: "result.image_type == MR"
              sink: mri_type_detector
      - id: ct_body_part_analyser
        description: Detect the body part this CT refers to
        ref: map
        map_template: body_part_analyser
        evaluators:
          post:
            - condition: "result.body_part == arm || result.body_part == leg"
              sinks:
                - fracture_detection
                - fracture_beta_qa_mode_checker
      - id: fracture_detection
        description: Detect fractures
        ref: map
        map_template: frac_detect
        output:
          - sink: PROD_PACS
      - id: fracture_beta_qa_mode_checker
        description: Verify QA mode execution parameters for Beta fracture detector
        ref: qa_mode_checker
        evaluators:
          post:
            - condition: "result.execution_counter < result.execution_limit"
              sink: fracture_detection_beta
      - id: fracture_detection_beta
        description: Detect fractures - beta version
        ref: map
        map_template: frac_detect_2.0.b1
        output:
          - sink: fracture_beta_qa_mode_incrementer
      - id: fracture_beta_qa_mode_incrementer
        description: Increment execution counter for QA mode
        ref: qa_mode_updater
        output:
          - sink: clinical_review
      - id: clinical_review
        description: Clinical review for fracture detection
        ref: clinical_review
        evaluators:
          post:
            - condition: "result.approved == True"
              sink: TEST_PACS
      - id: mri_type_detector
        description: Detect the type of MRI scan
        ref: map
        map_template: mri_classifier
        evaluators:
          post:
            - condition: "result.mri_type == T1"
              sink: mri_body_part_analyser
      - id: mri_body_part_analyser
        description: Detect the body part this MRI refers to
        ref: map
        map_template: mri_body_part_analyser
        evaluators:
          post:
            - condition: "result.body_part == brain && metadata.image_type_detector.dicom_tags.SliceThickness < 5"
              sink: stroke_pathway
      - id: stroke_pathway
        description: Detect stroke lesions in MRI scans
        ref: map
        map_template: stroke_mri
        output:
          - sink: PROD_PACS