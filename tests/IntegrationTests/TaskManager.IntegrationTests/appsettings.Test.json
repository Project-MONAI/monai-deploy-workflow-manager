{
  "WorkloadManagerDatabase": {
    "ConnectionString": "mongodb://root:rootpassword@localhost:27017",
    "DatabaseName": "WorkloadManager"
  },
  "WorkflowManager": {
    "TaskManager": {
      "concurrency": 1,
      "plug-ins": {
        "argo": "Monai.Deploy.WorkflowManager.TaskManager.Argo.ArgoPlugin, Monai.Deploy.WorkflowManager.TaskManager.Argo",
        "docker": "Monai.Deploy.WorkflowManager.TaskManager.Docker.DockerPlugin, Monai.Deploy.WorkflowManager.TaskManager.Docker",
        "aide_clinical_review": "Monai.Deploy.WorkflowManager.TaskManager.AideClinicalReview.AideClinicalReviewPlugin, Monai.Deploy.WorkflowManager.TaskManager.AideClinicalReview",
        "test": "Monai.Deploy.WorkflowManager.TaskManager.TestPlugin.TestPlugin, Monai.Deploy.WorkflowManager.TaskManager.TestPlugin",
        "email": "Monai.Deploy.WorkflowManager.TaskManager.Email.EmailPlugin, Monai.Deploy.WorkflowManager.TaskManager.Email"
      },
      "meta-data": {
        "argo": "Monai.Deploy.WorkflowManager.TaskManager.Argo.Repositories.ArgoMetadataRepository, Monai.Deploy.WorkflowManager.TaskManager.Argo",
        "aide_clinical_review": "Monai.Deploy.WorkflowManager.TaskManager.AideClinicalReview.Repositories.AideClinicalReviewMetadataRepository, Monai.Deploy.WorkflowManager.TaskManager.AideClinicalReview",
        "test": "Monai.Deploy.WorkflowManager.TaskManager.TestPlugin.Repositories.TestPluginRepository, Monai.Deploy.WorkflowManager.TaskManager.TestPlugin"
      }
    },
    "storage": {
      "serviceAssemblyName": "Monai.Deploy.Storage.MinIO.MinIoStorageService, Monai.Deploy.Storage.MinIO",
      "settings": {
        "endpoint": "localhost:9000",
        "accessKey": "minioadmin",
        "accessToken": "minioadmin",
        "bucket": "bucket1",
        "region": "eu-west-2",
        "securedConnection": false,
        "executableLocation": "/.",
        "serviceName": "serviceName"
      }
    },
    "messaging": {
      "retries": {
        "retryDelays": "localhost"
      },
      "topics": {
        "workflowRequest": "md.workflow.request",
        "exportComplete": "md.export.complete",
        "exportRequestPrefix": "md.export.request",
        "taskCallback": "md.tasks.callback",
        "aideClinicalReviewRequest": "aide.clinical_review.request",
        "aideClinicalReviewCancelation": "aide.clinical_review.cancellation",
        "notificationEmailRequest": "aide.notification_email.request",
        "notificationEmailCancelation": "aide.notification_email.cancellation"
      },
      "dicomAgents": {
        "dicomWebAgentName": "monaidicomweb",
        "scuAgentName": "monaiscu"
      },
      "argoCallback": {
        "argoRabbitOverrideEnabled": false,
        "argoRabbitOverrideEndpoint": "localhost"
      },
      "publisherServiceAssemblyName": "Monai.Deploy.Messaging.RabbitMQ.RabbitMQMessagePublisherService, Monai.Deploy.Messaging.RabbitMQ",
      "publisherSettings": {
        "endpoint": "localhost",
        "username": "admin",
        "password": "admin",
        "virtualHost": "monaideploy",
        "exchange": "monaideploy",
        "deadLetterExchange": "deadLetterExchange",
        "deliveryLimit": "5",
        "requeueDelay": "0"
      },
      "subscriberServiceAssemblyName": "Monai.Deploy.Messaging.RabbitMQ.RabbitMQMessageSubscriberService, Monai.Deploy.Messaging.RabbitMQ",
      "subscriberSettings": {
        "endpoint": "localhost",
        "username": "admin",
        "password": "admin",
        "virtualHost": "monaideploy",
        "exchange": "monaideploy",
        "deadLetterExchange": "monaideploy-dead-letter",
        "exportRequestQueue": "export_tasks",
        "deliveryLimit": 3,
        "requeueDelay": 30
      }
    }
  },
  "Kestrel": {
    "EndPoints": {
      "Http": {
        "Url": "http://localhost:5000"
      },
      "Http2": {
        "Url": "https://localhost:7000",
        "Protocols": "Http2"
      }
    }
  },
  "AllowedHosts": "*"
}