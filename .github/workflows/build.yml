# SPDX-FileCopyrightText: Â© 2021-2022 MONAI Consortium
# SPDX-License-Identifier: Apache License 2.0

name: CI

on:
  push:
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  sonarqube:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Project-MONAI_monai-deploy-workflow-manager" /o:"project-monai" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build -c Release src/Monai.Deploy.WorkloadManager.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build
      run: |
        export VERSION=`cat VERSION`
        ./build.sh
        docker tag monai/workload-manager:$VERSION monai/workload-manager:${{ github.sha }}
    - name: Scan image with Azure Container Scan
      uses: Azure/container-scan@v0
      with:
        image-name: monai/workload-manager:${{ github.sha }}
    - name: Scan image with Anchore
      id: scan
      uses: anchore/scan-action@v2
      with:
        image: monai/workload-manager:${{ github.sha }}
        fail-build: true
        severity-cutoff: high
        acs-report-enable: true
    # - name: upload Anchore scan SARIF report
    #   uses: github/codeql-action/upload-sarif@v1
    #   with:
    #     sarif_file: ${{ steps.scan.outputs.sarif }}

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Run Unit Test
      run: ./run-tests.sh
      working-directory: ./src
    - uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }} 
        directory: ./src/results
        files: "**/coverage.opencover.xml"
        flags: unittests 
        name: codecov-umbrella 
        fail_ci_if_error: true 
        verbose: true 
