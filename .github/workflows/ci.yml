# SPDX-FileCopyrightText: Â© 2021-2022 MONAI Consortium
# SPDX-License-Identifier: Apache License 2.0

name: CI

on:
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build
        run: |
          export VERSION=`cat VERSION`
          ./build.sh
          docker tag monai/workload-manager:$VERSION monai/workload-manager:${{ github.sha }}

      - name: Scan image with Azure Container Scan
        uses: Azure/container-scan@v0
        with:
          image-name: monai/workload-manager:${{ github.sha }}

      - name: Scan image with Anchore
        id: scan
        uses: anchore/scan-action@v2
        with:
          image: monai/workload-manager:${{ github.sha }}
          fail-build: true
          severity-cutoff: high
          acs-report-enable: true

      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  unit-test:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: Enable NuGet cache
        uses: actions/cache@v2.1.7
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./src
        
      - name: Begin SonarScanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner begin /k:"Project-MONAI_monai-deploy-workflow-manager" /o:"project-monai" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="results/**/coverage.opencover.xml"
        working-directory: ./src

      - name: Run Unit Test
        run: ./run-tests.sh
        working-directory: ./src

      - name: End SonarScanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        working-directory: ./src
          
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./src/results
          files: "**/coverage.opencover.xml"
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true